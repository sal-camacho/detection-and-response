Step 1: Identify network interfaces
Use `ifconfig` to identify the interfaces that are available:
analyst@391ba7e2aca7:~$ sudo ifconfig
eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1460
        inet 172.18.0.2  netmask 255.255.0.0  broadcast 172.18.255.255
        ether 02:42:ac:12:00:02  txqueuelen 0  (Ethernet)
        RX packets 878  bytes 13959269 (13.3 MiB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 571  bytes 47460 (46.3 KiB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
        inet 127.0.0.1  netmask 255.0.0.0
        inet6 ::1  prefixlen 128  scopeid 0x10<host>
        loop  txqueuelen 1000  (Local Loopback)
        RX packets 58  bytes 8804 (8.5 KiB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 58  bytes 8804 (8.5 KiB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

Use `tcpdump` to identify the interface options available for packet capture:
analyst@391ba7e2aca7:~$ sudo tcpdump -D
1.eth0 [Up, Running, Connected]
2.any (Pseudo-device that captures on all interfaces) [Up, Running]
3.lo [Up, Running, Loopback]
4.bluetooth-monitor (Bluetooth Linux Monitor) [Wireless]
5.nflog (Linux netfilter log (NFLOG) interface) [none]
6.nfqueue (Linux netfilter queue (NFQUEUE) interface) [none]
7.dbus-system (D-Bus system bus) [none]
8.dbus-session (D-Bus session bus) [none]

Step 2: Inspect the network traffic of a network interface with tcpdump
This command will run tcpdump with the following options
-i eth0: Capture data specifically from the eth0 interface.
-v: Display detailed packet data.
-c5: Capture 5 packets of data.
Filter live network packet data from the `eth0` interface with `tcpdump`:
analyst@391ba7e2aca7:~$ sudo tcpdump -i eth0 -v -c5
tcpdump: listening on eth0, link-type EN10MB (Ethernet), snapshot length 262144 bytes
23:03:39.907605 IP (tos 0x0, ttl 64, id 35487, offset 0, flags [DF], proto TCP (6), length 122)
    391ba7e2aca7.5000 > nginx-us-central1-b.c.qwiklabs-terminal-vms-prod-00.internal.46838: Flags [P.], cksum 0x58e7 (incorrect -> 0xf0a8), seq 3776408386:3776408456, ack 1255208018, win 998, options [nop,nop,TS val 899244596 ecr 2118231314], length 70
23:03:39.907942 IP (tos 0x0, ttl 63, id 29709, offset 0, flags [DF], proto TCP (6), length 52)
    nginx-us-central1-b.c.qwiklabs-terminal-vms-prod-00.internal.46838 > 391ba7e2aca7.5000: Flags [.], cksum 0x0ab7 (correct), ack 70, win 507, options [nop,nop,TS val 2118231359 ecr 899244596], length 0
23:03:40.004592 IP (tos 0x0, ttl 64, id 4430, offset 0, flags [DF], proto UDP (17), length 70)
    391ba7e2aca7.38414 > metadata.google.internal.domain: 25059+ PTR? 85.0.17.172.in-addr.arpa. (42)
23:03:40.010758 IP (tos 0x0, ttl 64, id 35488, offset 0, flags [DF], proto TCP (6), length 143)
    391ba7e2aca7.5000 > nginx-us-central1-b.c.qwiklabs-terminal-vms-prod-00.internal.46838: Flags [P.], cksum 0x58fc (incorrect -> 0xac7c), seq 70:161, ack 1, win 998, options [nop,nop,TS val 899244700 ecr 2118231359], length 91
23:03:40.011095 IP (tos 0x0, ttl 63, id 29710, offset 0, flags [DF], proto TCP (6), length 52)
    nginx-us-central1-b.c.qwiklabs-terminal-vms-prod-00.internal.46838 > 391ba7e2aca7.5000: Flags [.], cksum 0x098d (correct), ack 161, win 507, options [nop,nop,TS val 2118231462 ecr 899244700], length 0
5 packets captured
10 packets received by filter
0 packets dropped by kernel

Notes: 
1) Identify some of the properties that tcpdump outputs for the packet capture data above
In the example data at the start of the packet output, tcpdump reported that it was listening on the eth0 interface, and it provided information on the link type and the capture size in bytes:
tcpdump: listening on eth0, link-type EN10MB (Ethernet), capture size 262144 bytes
2) On the next line, the first field is the packet's timestamp, followed by the protocol type, IP:
22:24:18.910372 IP 
3) The verbose option, -v, has provided more details about the IP packet fields, such as TOS, TTL, offset, flags, internal protocol type (in this case, TCP (6)), and the length of the outer IP packet in bytes:
(tos 0x0, ttl 64, id 5802, offset 0, flags [DF], proto TCP (6), length 134)
4) The data shows the systems that are communicating with each other. By default, `tcpdump` will convert IP addresses into names, as in the screenshot. The name of your Linux virtual machine, also included in the command prompt, appears here as the source for one packet and the destination for the second packet. In your live data, the name will be a different set of letters and numbers. The direction of the arrow (>) indicates the direction of the traffic flow in this packet. Each system name includes a suffix with the port number (.5000), which is used by the source and the destination systems for this packet:
7acb26dc1f44.5000 > nginx-us-east1-c.c.qwiklabs-terminal-vms-prod-00.internal.59788
5) The remaining data filters the header data for the inner TCP packet. The flags field identifies TCP flags. In this case, the P represents the push flag and the period indicates it's an ACK flag. This means the packet is pushing out data. The next field is the TCP checksum value, which is used for detecting errors in the data. This section also includes the sequence and acknowledgment numbers, the window size, and the length of the inner TCP packet in bytes:
Flags [P.], cksum 0x5851 (incorrect > 0x30d3), seq 1080713945:1080714027, ack 62760789, win 501, options [nop,nop,TS val 1017464119 ecr 3001513453], length 82

Step 3: Capture network traffic with tcpdump
This command will run tcpdump in the background with the following options
-i eth0: Capture data from the eth0 interface.
-nn: Do not attempt to resolve IP addresses or ports to names.This is best practice from a security perspective, as the lookup data may not be valid. It also prevents malicious actors from being alerted to an investigation.
-c9: Capture 9 packets of data and then exit.
port 80: Filter only port 80 traffic. This is the default HTTP port.
-w capture.pcap: Save the captured data to the named file.
&: This is an instruction to the Bash shell to run the command in the background.
Use a filter and other tcpdump configuration options to save a small sample that contains only web (TCP port 80) network packet data.
Capture packet data into a file called capture.pcap:
analyst@391ba7e2aca7:~$ sudo tcpdump -i eth0 -nn -c9 port 80 -w capture.pcap &
[1] 13807
analyst@391ba7e2aca7:~$ tcpdump: listening on eth0, link-type EN10MB (Ethernet), snapshot length 262144 bytes

Use curl to generate some HTTP (port 80) traffic
When the curl command is used like this to open a website, it generates some HTTP (TCP port 80) traffic that can be captured:
curl opensource.google.com
<HTML><HEAD><meta http-equiv="content-type" content="text/html;charset=utf-8">
<TITLE>301 Moved</TITLE></HEAD><BODY>
<H1>301 Moved</H1>
The document has moved
<A HREF="https://opensource.google/">here</A>.
</BODY></HTML>
analyst@0bbd8ed5293b:~$ 9 packets captured
10 packets received by filter
0 packets dropped by kernel

Verify that packet data has been captured:
ls -l capture.pcap
-rw-r--r-- 1 tcpdump tcpdump 1455 Sep  9 23:49 capture.pcap
[1]+  Done                    sudo tcpdump -i eth0 -nn -c9 port 80 -w capture.pcap

Step 4: Filter the captured packet data
This command will run tcpdump with the following options
-nn: Disable port and protocol name lookup.
-r: Read capture data from the named file.
-v: Display detailed packet data.
Use the `tcpdump` command to filter the packet header data from the capture.pcap capture file:
analyst@0bbd8ed5293b:~$ sudo tcpdump -nn -r capture.pcap -v
reading from file capture.pcap, link-type EN10MB (Ethernet), snapshot length 262144
23:49:10.395001 IP (tos 0x0, ttl 64, id 5279, offset 0, flags [DF], proto TCP (6), length 60)
    172.17.0.2.58840 > 142.250.107.113.80: Flags [S], cksum 0xa6ad (incorrect -> 0xae77), seq 1323605937, win 65320, options [mss 1420,sackOK,TS val 827518456 ecr 0,nop,wscale 6], length 0
23:49:10.395665 IP (tos 0x0, ttl 126, id 0, offset 0, flags [DF], proto TCP (6), length 60)
    142.250.107.113.80 > 172.17.0.2.58840: Flags [S.], cksum 0xe90d (correct), seq 3204781662, ack 1323605938, win 65535, options [mss 1420,sackOK,TS val 1816167131 ecr 827518456,nop,wscale 8], length 0
23:49:10.395685 IP (tos 0x0, ttl 64, id 5280, offset 0, flags [DF], proto TCP (6), length 52)
    172.17.0.2.58840 > 142.250.107.113.80: Flags [.], cksum 0xa6a5 (incorrect -> 0x13b6), ack 1, win 1021, options [nop,nop,TS val 827518456 ecr 1816167131], length 0
23:49:10.395751 IP (tos 0x0, ttl 64, id 5281, offset 0, flags [DF], proto TCP (6), length 137)
    172.17.0.2.58840 > 142.250.107.113.80: Flags [P.], cksum 0xa6fa (incorrect -> 0x8169), seq 1:86, ack 1, win 1021, options [nop,nop,TS val 827518456 ecr 1816167131], length 85: HTTP, length: 85
        GET / HTTP/1.1
        Host: opensource.google.com
        User-Agent: curl/7.74.0
        Accept: */*

23:49:10.395924 IP (tos 0x0, ttl 126, id 0, offset 0, flags [DF], proto TCP (6), length 52)
    142.250.107.113.80 > 172.17.0.2.58840: Flags [.], cksum 0x1342 (correct), ack 86, win 1051, options [nop,nop,TS val 1816167132 ecr 827518456], length 0
23:49:10.397118 IP (tos 0x0, ttl 126, id 0, offset 0, flags [DF], proto TCP (6), length 644)
    142.250.107.113.80 > 172.17.0.2.58840: Flags [P.], cksum 0xbcf5 (correct), seq 1:593, ack 86, win 1051, options [nop,nop,TS val 1816167133 ecr 827518456], length 592: HTTP, length: 592
        HTTP/1.1 301 Moved Permanently
        X-Content-Type-Options: nosniff
        Cross-Origin-Resource-Policy: cross-origin
        Location: https://opensource.google/
        Server: sffe
        Content-Length: 223
        X-XSS-Protection: 0
        Date: Tue, 09 Sep 2025 23:37:45 GMT
        Expires: Wed, 10 Sep 2025 00:07:45 GMT
        Cache-Control: public, max-age=1800
        Content-Type: text/html; charset=UTF-8
        Age: 685

        <HTML><HEAD><meta http-equiv="content-type" content="text/html;charset=utf-8">
        <TITLE>301 Moved</TITLE></HEAD><BODY>
        <H1>301 Moved</H1>
        The document has moved
        <A HREF="https://opensource.google/">here</A>.
        </BODY></HTML>
23:49:10.397125 IP (tos 0x0, ttl 64, id 5282, offset 0, flags [DF], proto TCP (6), length 52)
    172.17.0.2.58840 > 142.250.107.113.80: Flags [.], cksum 0xa6a5 (incorrect -> 0x1116), ack 593, win 1012, options [nop,nop,TS val 827518458 ecr 1816167133], length 0
23:49:10.397289 IP (tos 0x0, ttl 64, id 5283, offset 0, flags [DF], proto TCP (6), length 52)
    172.17.0.2.58840 > 142.250.107.113.80: Flags [F.], cksum 0xa6a5 (incorrect -> 0x1115), seq 86, ack 593, win 1012, options [nop,nop,TS val 827518458 ecr 1816167133], length 0
23:49:10.397517 IP (tos 0x0, ttl 126, id 0, offset 0, flags [DF], proto TCP (6), length 52)
    142.250.107.113.80 > 172.17.0.2.58840: Flags [F.], cksum 0x10ed (correct), seq 593, ack 87, win 1051, options [nop,nop,TS val 1816167133 ecr 827518458], length 0

Notes: 
1) You must specify the -nn switch again here, as you want to make sure tcpdump does not perform name lookups of either IP addresses or ports, since this can alert threat actors. 

This command will run tcpdump with the following options
-nn: Disable port and protocol name lookup.
-r: Read capture data from the named file.
-X: Display the hexadecimal and ASCII output format packet data. Security analysts can analyze hexadecimal and ASCII output to detect patterns or anomalies during malware analysis or forensic analysis.
Use the tcpdump command to filter the extended packet data from the capture.pcap capture file:
analyst@0bbd8ed5293b:~$ sudo tcpdump -nn -r capture.pcap -X
reading from file capture.pcap, link-type EN10MB (Ethernet), snapshot length 262144
23:49:10.395001 IP 172.17.0.2.58840 > 142.250.107.113.80: Flags [S], seq 1323605937, win 65320, options [mss 1420,sackOK,TS val 827518456 ecr 0,nop,wscale 6], length 0
        0x0000:  4500 003c 149f 4000 4006 7f9e ac11 0002  E..<..@.@.......
        0x0010:  8efa 6b71 e5d8 0050 4ee4 9fb1 0000 0000  ..kq...PN.......
        0x0020:  a002 ff28 a6ad 0000 0204 058c 0402 080a  ...(............
        0x0030:  3152 edf8 0000 0000 0103 0306            1R..........
23:49:10.395665 IP 142.250.107.113.80 > 172.17.0.2.58840: Flags [S.], seq 3204781662, ack 1323605938, win 65535, options [mss 1420,sackOK,TS val 1816167131 ecr 827518456,nop,wscale 8], length 0
        0x0000:  4500 003c 0000 4000 7e06 563d 8efa 6b71  E..<..@.~.V=..kq
        0x0010:  ac11 0002 0050 e5d8 bf05 165e 4ee4 9fb2  .....P.....^N...
        0x0020:  a012 ffff e90d 0000 0204 058c 0402 080a  ................
        0x0030:  6c40 82db 3152 edf8 0103 0308            l@..1R......
23:49:10.395685 IP 172.17.0.2.58840 > 142.250.107.113.80: Flags [.], ack 1, win 1021, options [nop,nop,TS val 827518456 ecr 1816167131], length 0
        0x0000:  4500 0034 14a0 4000 4006 7fa5 ac11 0002  E..4..@.@.......
        0x0010:  8efa 6b71 e5d8 0050 4ee4 9fb2 bf05 165f  ..kq...PN......_
        0x0020:  8010 03fd a6a5 0000 0101 080a 3152 edf8  ............1R..
        0x0030:  6c40 82db                                l@..
23:49:10.395751 IP 172.17.0.2.58840 > 142.250.107.113.80: Flags [P.], seq 1:86, ack 1, win 1021, options [nop,nop,TS val 827518456 ecr 1816167131], length 85: HTTP: GET / HTTP/1.1
        0x0000:  4500 0089 14a1 4000 4006 7f4f ac11 0002  E.....@.@..O....
        0x0010:  8efa 6b71 e5d8 0050 4ee4 9fb2 bf05 165f  ..kq...PN......_
        0x0020:  8018 03fd a6fa 0000 0101 080a 3152 edf8  ............1R..
        0x0030:  6c40 82db 4745 5420 2f20 4854 5450 2f31  l@..GET./.HTTP/1
        0x0040:  2e31 0d0a 486f 7374 3a20 6f70 656e 736f  .1..Host:.openso
        0x0050:  7572 6365 2e67 6f6f 676c 652e 636f 6d0d  urce.google.com.
        0x0060:  0a55 7365 722d 4167 656e 743a 2063 7572  .User-Agent:.cur
        0x0070:  6c2f 372e 3734 2e30 0d0a 4163 6365 7074  l/7.74.0..Accept
        0x0080:  3a20 2a2f 2a0d 0a0d 0a                   :.*/*....
23:49:10.395924 IP 142.250.107.113.80 > 172.17.0.2.58840: Flags [.], ack 86, win 1051, options [nop,nop,TS val 1816167132 ecr 827518456], length 0
        0x0000:  4500 0034 0000 4000 7e06 5645 8efa 6b71  E..4..@.~.VE..kq
        0x0010:  ac11 0002 0050 e5d8 bf05 165f 4ee4 a007  .....P....._N...
        0x0020:  8010 041b 1342 0000 0101 080a 6c40 82dc  .....B......l@..
        0x0030:  3152 edf8                                1R..
23:49:10.397118 IP 142.250.107.113.80 > 172.17.0.2.58840: Flags [P.], seq 1:593, ack 86, win 1051, options [nop,nop,TS val 1816167133 ecr 827518456], length 592: HTTP: HTTP/1.1 301 Moved Permanently
        0x0000:  4500 0284 0000 4000 7e06 53f5 8efa 6b71  E.....@.~.S...kq
        0x0010:  ac11 0002 0050 e5d8 bf05 165f 4ee4 a007  .....P....._N...
        0x0020:  8018 041b bcf5 0000 0101 080a 6c40 82dd  ............l@..
        0x0030:  3152 edf8 4854 5450 2f31 2e31 2033 3031  1R..HTTP/1.1.301
        0x0040:  204d 6f76 6564 2050 6572 6d61 6e65 6e74  .Moved.Permanent
        0x0050:  6c79 0d0a 582d 436f 6e74 656e 742d 5479  ly..X-Content-Ty
        0x0060:  7065 2d4f 7074 696f 6e73 3a20 6e6f 736e  pe-Options:.nosn
        0x0070:  6966 660d 0a43 726f 7373 2d4f 7269 6769  iff..Cross-Origi
        0x0080:  6e2d 5265 736f 7572 6365 2d50 6f6c 6963  n-Resource-Polic
        0x0090:  793a 2063 726f 7373 2d6f 7269 6769 6e0d  y:.cross-origin.
        0x00a0:  0a4c 6f63 6174 696f 6e3a 2068 7474 7073  .Location:.https
        0x00b0:  3a2f 2f6f 7065 6e73 6f75 7263 652e 676f  ://opensource.go
        0x00c0:  6f67 6c65 2f0d 0a53 6572 7665 723a 2073  ogle/..Server:.s
        0x00d0:  6666 650d 0a43 6f6e 7465 6e74 2d4c 656e  ffe..Content-Len
        0x00e0:  6774 683a 2032 3233 0d0a 582d 5853 532d  gth:.223..X-XSS-
        0x00f0:  5072 6f74 6563 7469 6f6e 3a20 300d 0a44  Protection:.0..D
        0x0100:  6174 653a 2054 7565 2c20 3039 2053 6570  ate:.Tue,.09.Sep
        0x0110:  2032 3032 3520 3233 3a33 373a 3435 2047  .2025.23:37:45.G
        0x0120:  4d54 0d0a 4578 7069 7265 733a 2057 6564  MT..Expires:.Wed
        0x0130:  2c20 3130 2053 6570 2032 3032 3520 3030  ,.10.Sep.2025.00
        0x0140:  3a30 373a 3435 2047 4d54 0d0a 4361 6368  :07:45.GMT..Cach
        0x0150:  652d 436f 6e74 726f 6c3a 2070 7562 6c69  e-Control:.publi
        0x0160:  632c 206d 6178 2d61 6765 3d31 3830 300d  c,.max-age=1800.
        0x0170:  0a43 6f6e 7465 6e74 2d54 7970 653a 2074  .Content-Type:.t
        0x0180:  6578 742f 6874 6d6c 3b20 6368 6172 7365  ext/html;.charse
        0x0190:  743d 5554 462d 380d 0a41 6765 3a20 3638  t=UTF-8..Age:.68
        0x01a0:  350d 0a0d 0a3c 4854 4d4c 3e3c 4845 4144  5....<HTML><HEAD
        0x01b0:  3e3c 6d65 7461 2068 7474 702d 6571 7569  ><meta.http-equi
        0x01c0:  763d 2263 6f6e 7465 6e74 2d74 7970 6522  v="content-type"
        0x01d0:  2063 6f6e 7465 6e74 3d22 7465 7874 2f68  .content="text/h
        0x01e0:  746d 6c3b 6368 6172 7365 743d 7574 662d  tml;charset=utf-
        0x01f0:  3822 3e0a 3c54 4954 4c45 3e33 3031 204d  8">.<TITLE>301.M
        0x0200:  6f76 6564 3c2f 5449 544c 453e 3c2f 4845  oved</TITLE></HE
        0x0210:  4144 3e3c 424f 4459 3e0a 3c48 313e 3330  AD><BODY>.<H1>30
        0x0220:  3120 4d6f 7665 643c 2f48 313e 0a54 6865  1.Moved</H1>.The
        0x0230:  2064 6f63 756d 656e 7420 6861 7320 6d6f  .document.has.mo
        0x0240:  7665 640a 3c41 2048 5245 463d 2268 7474  ved.<A.HREF="htt
        0x0250:  7073 3a2f 2f6f 7065 6e73 6f75 7263 652e  ps://opensource.
        0x0260:  676f 6f67 6c65 2f22 3e68 6572 653c 2f41  google/">here</A
        0x0270:  3e2e 0d0a 3c2f 424f 4459 3e3c 2f48 544d  >...</BODY></HTM
        0x0280:  4c3e 0d0a                                L>..
23:49:10.397125 IP 172.17.0.2.58840 > 142.250.107.113.80: Flags [.], ack 593, win 1012, options [nop,nop,TS val 827518458 ecr 1816167133], length 0
        0x0000:  4500 0034 14a2 4000 4006 7fa3 ac11 0002  E..4..@.@.......
        0x0010:  8efa 6b71 e5d8 0050 4ee4 a007 bf05 18af  ..kq...PN.......
        0x0020:  8010 03f4 a6a5 0000 0101 080a 3152 edfa  ............1R..
        0x0030:  6c40 82dd                                l@..
23:49:10.397289 IP 172.17.0.2.58840 > 142.250.107.113.80: Flags [F.], seq 86, ack 593, win 1012, options [nop,nop,TS val 827518458 ecr 1816167133], length 0
        0x0000:  4500 0034 14a3 4000 4006 7fa2 ac11 0002  E..4..@.@.......
        0x0010:  8efa 6b71 e5d8 0050 4ee4 a007 bf05 18af  ..kq...PN.......
        0x0020:  8011 03f4 a6a5 0000 0101 080a 3152 edfa  ............1R..
        0x0030:  6c40 82dd                                l@..
23:49:10.397517 IP 142.250.107.113.80 > 172.17.0.2.58840: Flags [F.], seq 593, ack 87, win 1051, options [nop,nop,TS val 1816167133 ecr 827518458], length 0
        0x0000:  4500 0034 0000 4000 7e06 5645 8efa 6b71  E..4..@.~.VE..kq
        0x0010:  ac11 0002 0050 e5d8 bf05 18af 4ee4 a008  .....P......N...
        0x0020:  8011 041b 10ed 0000 0101 080a 6c40 82dd  ............l@..
        0x0030:  3152 edfa                                1R..

Notes:
Hexadecimal, also known as hex or base 16, uses 16 symbols to represent values, including the digits 0-9 and letters A, B, C, D, E, and F. American Standard Code for Information Interchange (ASCII) is a character encoding standard that uses a set of characters to represent text in digital form.
